<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AABOsez9TbHq/k2x6v5Nser+TbHq/k2x6v5Nser+TbHq/k2x6v5Nser+TbHq/k2x6v5Nser+TbHq/k2x
        6v5Nsuv+QZPk/0yv6v5Nser+TbHq/k2x6v5Nser+TbHq/k2x6v5Nser+TbHq/k2x6v5Nser+TbHq/k2x
        6v5Os+r+QpTk/U2x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02y6v9Bk+T/TK/q/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/0606/9Bk+T/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbLq/0GT5P9Mr+r/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TrTr/0GT5P9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nsur/QZPk/0yv6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9OtOv/QZPk/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02y6v9Bk+T/TK/q/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/0606/9Bk+T/TbHq/02x6v9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbLq/0GT5P9Mr+r/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TrTr/0GT5P9Nser/TbHq/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nsur/QZPk/0yv
        6v9Nser/TbHq/02x6v9Nser/TbHq/02z6/9Sj+X/T6Po/02x6v9Nser/TbHq/02x6v9OtOv/QZPk/02x
        6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/02y
        6v9Bk+T/TK/q/02x6v9Nser/TbHq/02x6v9Nser/TbLq/1dq3/9ThuP/TbHq/02x6v9Nser/TbHq/060
        6/9Bk+T/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TbHq/06w6f9Jt/X/S7Tv/02x6v9Nser/TbHq/02x
        6v9Nser/TbLq/0GT5P9Lrur/TLDq/0yw6v9MsOr/TLDq/0yw6v9Lsur/V2jf/1OE4/9MsOn/TrLr/06y
        6/9Osuv/TrXs/0GU5f9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Nser/TLPn/4NTHv9tenL/TbHq/02x
        6v9Nser/TbHq/02x6v9Nsur/QZPk/33F8PqEyvD6hMrw+oTK8PqEyvD6hMrw+oPK8fqDx/H7ecPu/Gm9
        49EkUmQcI09qHSNPah0jT2odHjxhIk2x6v9Nser/TbHq/02x6v9Nser/TbHq/02x6v9Msef/flwy/2t9
        ev9Nser/TbHq/02x6v9Nser/TbHq/02y6v9Bk+T/gMbv/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL
        8f99x+//arrc0gAAAAAAAAAAAAAAAAAAAAAAAAAAVcL2+FXD+PlMtO74Sa7p/Emu6fxJrun8Sa7p/Eiv
        5Px8UyP+aXhy/Eiu6fxMsOr9Sa7p/0mu6v9Jrur/Sa/q/zqO4v+Bx/D/hsvx/4bL8f+Gy/H/hsvx/4bL
        8f+Gy/H/hsvx/33H7/9qutzSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH270bOIzfH/iM3x/4jN
        8f+IzfH/iMzx/4fQ9v+HzvX/i83z/2e86/+MzvL/ic3x/4nN8f+JzfH/is7y/4XL8f+Gy/H/hsvx/4bL
        8f+Gy/H/hsvx/4bL8f+Gy/H/fcfv/2q63NIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe7jTtIbL
        8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+JzPL/Zrzr/4jN8v+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL
        8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f99x+//arrc0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB7uNO0hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4nM8v9mvOv/iM3y/4bL8f+Gy/H/hsvx/4bL
        8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/33H7/9qutzSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHu407SGy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/iczy/2a86/+IzfL/hsvx/4bL
        8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/fcfv/2q63NIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAe7jTtIbL8f+Gy/H/hsvx/4nS8/+L1PP/hcrx/4bL8f+JzPL/Zrzr/4jN
        8v+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f99x+//arrc0gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7uNO0hsvx/4bL8f+GzPH/V2nf/05X2/+M1/T/hsvx/4nM
        8v9mvOv/iM3y/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/33H
        7/9qutzSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHu407SGy/H/hsvx/4bM8f9aceD/U2Pd/4vW
        9P+Gy/H/iczy/2a86/+IzfL/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL8f+Gy/H/hsvx/4bL
        8f+Gy/H/fcfv/2q63NIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAh8vappTg+vWU4Pr1luT79Fts
        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
        ///8AP///AD///wA///8AP///AD///wA//8=
</value>
  </data>
</root>